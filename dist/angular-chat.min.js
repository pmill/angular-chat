!function(){"use strict";angular.module("angular-chat",[])}(),function(){"use strict";function n(){return{restrict:"E",scope:{user:"="},templateUrl:"lobby.html",replace:!0,controller:e,controllerAs:"vm",bindToController:!0}}function e(n,e){function o(){e.connectToRoom(u.data.lobbyName,u.user).then(function(){e.sendUserConnected(),e.onUserConnected(r),e.onUserDisconnected(t),e.onUserDetailsReceived(r),e.onRoomCreated(c)})}function t(n){delete u.data.users[n.id]}function r(e){e.id!==u.data.user.id&&(u.data.users[e.id]=e,n.$apply())}function c(e){u.data.rooms.push(e),n.$apply()}var u=this;u.data={lobbyName:"public-chat-users",users:{},rooms:[],user:u.user},o()}angular.module("angular-chat").directive("pmChatLobby",n),e.$inject=["$scope","ChatRoomService"]}(),function(){"use strict";function n(n,e){function o(o,t){return g=o,h=t,n.onbeforeunload=function(){e.send(g,"user.disconnected",h)},e.connect().then(function(){return e.subscribe(g)})}function t(n){return e.send(g,"message.received",n)}function r(){return e.send(g,"user.connected",h)}function c(){return e.send(g,"user.details",h)}function u(n){return e.on(g,"room.created",n)}function s(n){return e.on(g,"message.received",n)}function i(n){function o(e){c(h),n(e)}return e.on(g,"user.connected",o)}function a(n){return e.on(g,"user.disconnected",n)}function d(n){return e.on(g,"user.details",n)}function l(n){if(n===h.id)throw"Can't start a chat with yourself!";var t=f([h.id,n]);o(t).then(function(){return e.send(t,"room.created",t)})}function f(n){return n=n.sort(),"private-chat-room-"+m(n.join("|"))}function m(n){return n.split("").reduce(function(n,e){return n=(n<<5)-n+e.charCodeAt(0),n&n},0)}var h=null,g=null;return{connectToRoom:o,onRoomCreated:u,onMessageReceived:s,onUserDetailsReceived:d,onUserConnected:i,onUserDisconnected:a,sendMessage:t,sendUserConnected:r,sendUserDetails:c,startChatWithUser:l}}angular.module("angular-chat").factory("ChatRoomService",n),n.$inject=["$window","SocketService"]}(),function(){"use strict";function n(n,e){function o(){return i=new ScaleDrone(e.channelId),n(function(n,e){i.on("open",function(o){return o?e(o):n()})})}function t(){return n(function(n,e){i.on("close",function(){console.log("close()"),n()})})}function r(n,e,o){console.log("subscribing to event",n,e),s(n).on("data",function(t){t.event==e&&(console.log("processing message",n,e,t),o(t.payload))})}function c(n,e,o){console.log("sending message",n,e,o),i.publish({room:n,message:{event:e,payload:o}})}function u(e){return n(function(n,o){a[e]=i.subscribe(e),a[e].on("open",function(e){return e?o(e):n()})})}function s(n){return a[n]}var i,a={};return{connect:o,on:r,onDisconnect:t,room:s,send:c,subscribe:u}}angular.module("angular-chat").factory("SocketService",n),n.$inject=["$q","socketConfig"]}(),function(){angular.module("angular-chat").run(["$templateCache",function(n){n.put("lobby.html",'<div>\n    <h1>Lobby {{vm.data.user}}</h1>\n\n    <ul>\n        <li ng-repeat="user in vm.data.users">\n            {{user}}\n        </li>\n    </ul>\n</div>')}])}();
//# sourceMappingURL=angular-chat.min.js.map
