"use strict";angular.module("pusher-angular",[]).factory("$pusher",["$rootScope","$channel","$connection",function(n,e,t){function i(n){return this instanceof i?(this._assertValidClient(n),this.client=n,this.connection=t(n.connection,n),void(this.channels={})):new i(n)}return i.prototype={subscribe:function(n){var t=this.client.channel(n);return void 0===t&&(t=this.client.subscribe(n)),t=e(t,this),this.channels[n]=t,t},unsubscribe:function(n){this.client.channel(n)&&(this.client.unsubscribe(n),this.channels[n]&&delete this.channels[n])},bind:function(e,t,i,r){var s=angular.isDefined(r)&&!r,o=function(e){t(e),s||n.$digest()};return this.client.bind(e,o,i),o},bind_all:function(e,t){var i=angular.isDefined(t)&&!t;this.client.bind_all(function(t,r){e(t,r),i||n.$digest()})},unbind:function(n,e,t){this.client.unbind(n,e,t)},disconnect:function(){this.client.disconnect()},channel:function(n){return this.channels[n]},allChannels:function(){return this.channels},_assertValidClient:function(n){if(!angular.isObject(n)||!angular.isObject(n.connection)||"function"!=typeof n.channel)throw new Error("Invalid Pusher client object")}},i}]).factory("$channel",["$rootScope","$members",function(n,e){function t(n){if(-1==n.indexOf("presence-")&&-1==n.indexOf("private-"))throw new Error("Presence or private channel required")}function i(n,t){return this instanceof i?(this._assertValidChannel(n),this.baseChannel=n,this.client=t,this.name=n.name,void(-1==n.name.indexOf("presence")?this.members=function(){throw new Error("Members object only exists for presence channels")}:this.members=e(n.members,n))):new i(n,t)}return i.prototype={bind:function(e,t,i,r){var s=angular.isDefined(r)&&!r,o=function(e){t(e),s||n.$digest()};return this.baseChannel.bind(e,o,i),o},unbind:function(n,e,t){this.baseChannel.unbind(n,e,t)},bind_all:function(e,t){var i=angular.isDefined(t)&&!t;this.baseChannel.bind_all(function(t,r){e(t,r),i||n.$digest()})},trigger:function(n,e){if(t(this.name),-1==n.indexOf("client-"))throw new Error("Event name requires 'client-' prefix");return this.baseChannel.trigger(n,e)},_assertValidChannel:function(n){if(!angular.isObject(n)||"string"!=typeof n.name)throw new Error("Invalid Pusher channel object")}},i}]).factory("$members",["$rootScope",function(n){function e(t,i){if(!(this instanceof e))return new e(t,i);var r=this;this._assertValidMembers(t),this.baseMembers=t,this.baseChannel=i,this.me={},this.count=0,this.members={},i.bind("pusher:subscription_succeeded",function(e){r.me=e.me,r.count=e.count,r.members=e.members,n.$digest()}),i.bind("pusher:member_added",function(e){r.count++,e.info?r.members[e.id.toString()]=e.info:r.members[e.id.toString()]=null,n.$digest()}),i.bind("pusher:member_removed",function(e){r.count--,delete r.members[e.id.toString()],n.$digest()})}return e.prototype={get:function(n){return this.baseMembers.get(n)},each:function(e){this.baseMembers.each(function(t){e(t),n.$digest()})},_assertValidMembers:function(n){if(!angular.isObject(n)||"object"!=typeof n.me)throw new Error("Invalid Pusher channel members object")}},e}]).factory("$connection",["$rootScope",function(n){function e(n,t){return this instanceof e?(this._assertValidConnection(n),this.baseConnection=n,void(this.baseClient=t)):new e(n,t)}return e.prototype={bind:function(e,t,i,r){var s=angular.isDefined(r)&&!r;this.baseConnection.bind(e,function(e){t(e),s||n.$digest()},i)},bind_all:function(e,t){var i=angular.isDefined(t)&&!t;this.baseConnection.bind_all(function(t,r){e(t,r),i||n.$digest()})},_assertValidConnection:function(n){if(!angular.isObject(n))throw new Error("Invalid Pusher connection object")}},e}]),function(){angular.module("angular-pusher-chat",["pusher-angular"])}(),function(){function n(n){function e(e,t){return d=e,h=t,n.subscribe(d).then(function(){n.send(d,"user.connected",h)})}function t(e){return n.send(d,"message.received",e)}function i(){return n.send(d,"user.details",h)}function r(){return n.event(d,"chat.created")}function s(){return n.event(d,"message.received")}function o(){return n.event(d,"user.connected")}function c(){return n.event(d,"user.details")}function u(t){if(t===h.id)throw"Can't start a chat with yourself!";var i=a([h.id,t]);e(i).then(function(){return n.send(i,"chat.created",i)})}function a(n){return n=n.sort(),"private-chat-room-"+l(n.join("|"))}function l(n){return n.split("").reduce(function(n,e){return n=(n<<5)-n+e.charCodeAt(0),n&n},0)}var h=null,d=null;return{connectToRoom:e,onChatCreated:r,onMessageReceived:s,onUserDetailsReceived:c,onUserJoined:o,sendMessage:t,sendUserDetails:i,startChatWithUser:u}}angular.module("angular-pusher-chat").factory("ChatRoomService",n),n.$inject=["PusherService"]}(),function(){function n(n,e,t){function i(){console.log("PusherService.connect");var e=new Pusher(t.apiKey,t);u=n(e)}function r(n,t){return e(function(e,i){c(n).bind(t,function(n){e(n)})})}function s(n,e,t){console.log("PusherService.send",n,e,t),c(n).trigger(n,e,t)}function o(n){return console.log("PusherService.subscribe('"+n+"')"),null===u&&i(),e(function(e,t){var i=u.subscribe(n);i.bind("pusher:subscription_succeeded",function(){e(i)}),i.bind("pusher:subscription_error",function(){t(i)})})}function c(n){return console.log("PusherService.channel",n),u.channel(n)}var u=null;return{channel:c,connect:i,event:r,send:s,subscribe:o}}angular.module("angular-pusher-chat").factory("PusherService",n),n.$inject=["$pusher","$q","pusherConfig"]}(),function(){function n(){return{restrict:"E",scope:{user:"="},templateUrl:"lobby.html",replace:!0,controller:e,controllerAs:"vm",bindToController:!0}}function e(n,e){function t(){e.connectToRoom("public-chat-users",s.user).then(function(){e.onUserJoined().then(i),e.onUserDetailsReceived().then(i),e.onChatCreated().then(r)})}function i(n){s.data.users[n.id]=n}function r(n){s.data.chats.push(n)}var s=this;s.data={users:{},chats:{}},t()}angular.module("angular-pusher-chat").directive("pmChatLobby",n),e.$inject=["$scope","ChatRoomService"]}(),function(){angular.module("angular-pusher-chat").run(["$templateCache",function(n){n.put("lobby.html",'<div>\n    <h1>Lobby</h1>\n\n    <ul>\n        <li ng-repeat="user in vm.data.users">\n            {{user}}\n        </li>\n    </ul>\n</div>')}])}();
//# sourceMappingURL=angular-pusher-chat.min.js.map
